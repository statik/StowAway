h1. Stowaway

This application was generated with the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem provided by the "RailsApps Project":http://railsapps.github.io/.

h2. Diagnostics

This application was built with recipes that are known to work together.

This application was built with preferences that are NOT known to work together.

If the application doesn't work as expected, please "report an issue":https://github.com/RailsApps/rails_apps_composer/issues and include these diagnostics:

We'd also like to know if you've found combinations of recipes or preferences that do work together.

Recipes:
["apps4", "controllers", "core", "email", "extras", "frontend", "gems", "git", "init", "models", "prelaunch", "railsapps", "readme", "routes", "saas", "setup", "testing", "views"]

Preferences:
{:git=>true, :apps4=>"none", :dev_webserver=>"unicorn", :prod_webserver=>"unicorn", :database=>"postgresql", :templates=>"haml", :unit_test=>"rspec", :integration=>"cucumber", :continuous_testing=>"none", :fixtures=>"factory_girl", :frontend=>"none", :email=>"mandrill", :authentication=>"devise", :devise_modules=>"invitable", :authorization=>"cancan", :form_builder=>"simple_form", :starter_app=>"admin_app", :rvmrc=>false, :quiet_assets=>true, :better_errors=>true}

h2. Ruby on Rails

This application requires:

* Ruby version 2.0.0
* Rails version 4.0.0

Learn more about "Installing Rails":http://railsapps.github.io/installing-rails.html.

h2. Database

This application uses PostgreSQL with ActiveRecord.

h2. Development

* Template Engine: Haml
* Testing Framework: RSpec and Factory Girl and Cucumber
* Front-end Framework: None
* Form Builder: SimpleForm
* Authentication: Devise
* Authorization: CanCan

h2. Email

The application is configured to send email using a Mandrill account.

h2. Getting Started

1. Install [Vagrant](http://www.vagrantup.com)
2. Install [Virtualbox](http://www.virtualbox.org)
3. Install the vagrant-omnibus plugin using `vagrant plugin install vagrant-omnibus`
4. Install the vagrant-vbguest plugin using `vagrant plugin install vagrant-vbguest`
5. Run `vagrant up`. The first time this will download 500MB for the base box, after that it is cached for re-use.
6. Once provisioning completes, you can visit the [dev version of StowAway](http://localhost:3000). Register for an account.

h2. Installing a real server

1. Provision a fresh server (Digital Ocean, EC2, fresh OS install, etc).
2. Add your SSH key to the server using `ssh-copy-id root@stowaway.com`. On OS X the ssh-copy-id command can be installed from homebrew using `brew install ssh-copy-id`.
3. Install chef-solo from the omnibus package

    ssh root@stowaway.com "curl -L https://www.opscode.com/chef/install.sh | bash"

4. Rsync the chef recipes to the machine and run chef-solo

    ./provision-server-with-chef-solo

At this point you should see chef run to completion and give you a fully configured server. Any chef recipe attributes that need to be overriden to tweak the server in a different way than the Vagrant machine can be specified in `chef/roles/server.rb`, otherwise things should be identical to the Vagrant machine. In order to make changes, you can work locally and change the recipe files, then test them out with `vagrant provision`. Once you are happy with the changes you can apply them to the server by re-running step 4.

h2. Deploying the application

TODO: capistrano staging + production environments
TODO: chef phusion passenger

h2. Running Tests

* rake cucumber
* rake spec

TODO: Travis-CI
TODO: Jasmine

h2. Documentation and Support

This is the only documentation.

h2. Contributing

If you make improvements to this application, please share with others.

* Fork the project on GitHub.
* Make your feature addition or bug fix.
* Commit with Git.
* Send the author a pull request.

h2. Credits

Jay Collins, Johann Sabbath, Patrick Kenney, Elliot Murphy

h2. License

Apache V2.0
