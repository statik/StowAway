- display_style = f.object.new_record? ? 'display: none' : ''
%h4
  - if @resource.created_at.nil?
    Tell us where the space is located.
  - else
    Space Location

.where
  = f.collection_radio_buttons :environment, [[:indoor, 'Indoor'] ,[:outdoor, 'Outdoor']], :first, :last do |b|
    = b.radio_button
    = b.label(class: 'button radius', id: "#{b.text.underscore}_button_label") do
      - if b.text == 'Indoor'
        %i.ico-home
      - else
        %i.ico-tree
      %span
        = b.text

%h4
  - if @resource.created_at.nil?
    #what_kind_of_space{ style: display_style } What type of space is it?
  - else
    #what_kind_of_space{ style: display_style } Space Type

#indoor_button_group.indoor.what{ style: display_style }
  - space_type = [[:attic, 'Attic'],
    [:garage, 'Garage'],
    [:spare_room, 'Spare Room'],
    [:basement, 'Basement']]
  = f.collection_radio_buttons :type, space_type, :first, :second do |b|
    = b.radio_button
    = b.label(class: 'button radius', id: "#{b.text.parameterize.underscore}_button_label") do
      - if b.text == 'Attic'
        %i.ico-flashlight
      - elsif b.text == 'Garage'
        %i.ico-drill
      - elsif b.text == 'Spare Room'
        %i.ico-dolly
      - elsif b.text == 'Basement'
        %i.ico-travel
      %span
        = b.text

#outdoor_button_group.outdoor.what{ style: display_style }
  - space_type = [[:driveway, 'Driveway'], [:covered, 'Covered Area'], [:uncovered, 'Uncovered Area']]
  = f.collection_radio_buttons :type, space_type, :first, :second do |b|
    = b.radio_button
    = b.label(class: 'button radius', id: "#{b.text.parameterize.underscore}_button_label") do
      - if b.text == 'Driveway'
        %i.icon-road
      - elsif b.text == 'Covered Area'
        %i.ico-trailer
      - elsif b.text == 'Uncovered Area'
        %i.ico-acorn
      - else
      %span
        = b.text

%section.access#access_button_group{ style: display_style }
  %h4
    - if @resource.created_at.nil?
      How's the access?
      %p.small Specify here how often you would like to be contacted.
    - else
      Access Level

  .how
    = f.collection_radio_buttons :access, [[:anytime, 'Open Anytime'], [:appointment, 'By Appointment'], [:limited, 'Onetime']], :first, :second do |b|
      = b.radio_button
      = b.label(class: 'button radius', id: "#{b.text.parameterize.underscore}_button_label") do
        - if b.text == 'Open Anytime'
          %i.ico-open
        - elsif b.text == 'By Appointment'
          %i.ico-clock
        - elsif b.text == 'Onetime'
          %i.ico-bolt
        %span
          = b.text

%section.features
  %h4
    Features
    %small (Select all that apply.)
  %ul.checkbtns
    %li
      - active = f.object.climate_controlled ? 'active' : ''
      = f.label :climate_controlled, :class => 'checkbox fullbtn button radius ' + active, id: 'climate_checkbox_label' do
        %i.ico-equalizer
        The climate in the storage area is controlled.
        - if f.object.lockable ? 'active' : ''
          %i.ico-checkmark
      = f.check_box :climate_controlled, :class => 'checkbox'
    %li
      - active = f.object.lockable ? 'active' : ''
      = f.label :lockable, :class => 'checkbox fullbtn button radius ' + active, id: 'lockable_checkbox_label' do
        %i.ico-locked
        The space is locked from the outside.
        - if f.object.lockable ? 'active' : ''
          %i.ico-checkmark
      = f.check_box :lockable, :class => 'checkbox'
    %li
      - active = f.object.attended ? 'active' : ''
      = f.label :attended, :class => 'checkbox fullbtn button radius ' + active, id: 'attended_checkbox_label' do
        %i.ico-tie
        Someone is nearby/attending the space.
        - if f.object.attended ? 'active' : ''
          %i.ico-checkmark
      = f.check_box :attended, :class => 'checkbox '
%hr
%section.dimensions
  .row
    .column.large-3
      %h4
        Dimensions
        %small
          (in feet)
    .column.large-9
      = f.input :length, :label => 'length', input_html: { min: 5, max: 500, :step =>"2" }
      = f.input :width, :label => 'width', input_html: { min: 5, max: 500 }
      = f.input :height, :label => 'height', input_html: { min: 5, max: 500 }
      .clearfix
%hr
%section.tags
  %h4
    Tags
  = f.text_field :tag_list
%hr
%section.description
  %h3 Description
  = f.input :notes, :label => 'Tell us a bit about your space.'

